1

SELECT 
       student.name,
       student.surname,
	   hobby.name
FROM student,
     student_hobby,
	 hobby
WHERE student.id= student_hobby.student_id and student_hobby.student_id=hobby.id;


2

select st.name, st.surname, sh.date_start
from student st, student_hobby sh
where st.id=sh.student_id and sh.date_finish is null
order by sh.date_start
limit 1

3


select st.name, st.surname, st.n_group, st.date_birth
from student st
inner join (select sum(hb.risk) as Sumrisk, sh.student_id
		   from student_hobby sh,hobby hb
		   where hb.id = sh.id_hobby and sh.date_finish is null
		   group by sh.student_id) tt
		   on tt.student_id=st.id and tt.Sumrisk>9
		  
4

SELECT justify_days(date_finish - date_start)
FROM student_hobby

SELECT extract(year from (justify_days(now() - date_birth)))
FROM student

SELECT st.name, st.surname, st.n_group, st.date_birth, tt.monthes, tt.name
FROM student st
INNER JOIN
(SELECT (to_char(sh.date_finish, 'MM')::numeric(10,0) + to_char(sh.date_finish, 'YYYY')::numeric(10,0) * 12) - (to_char(sh.date_start, 'MM')::numeric(10,0) + to_char(sh.date_start, 'YYYY')::numeric(10,0) * 12) as monthes, sh.student_id, hb.name
FROM student_hobby sh, hobby hb
WHERE hb.id = sh.id) tt
ON tt.student_id = st.id

5

SELECT st.name, st.surname, st.n_group, st.date_birth
FROM student st
INNER JOIN
(SELECT count(sh.id_hobby), sh.student_id
FROM student_hobby sh, hobby hb
WHERE hb.id = sh.id_hobby
GROUP BY sh.student_id
HAVING count(sh.id_hobby) >1) tt
ON tt.student_id = st.id
WHERE 3 = ((to_char('2024-03-19'::date, 'YYYY')::int * 12 * 30 + to_char('2024-03-19'::date, 'MM')::int * 30 + to_char('2024-03-19'::date, 'DD')::int) - (to_char(st.date_birth, 'YYYY')::int * 12 * 30 + to_char(st.date_birth, 'MM')::int * 30 + to_char(st.date_birth, 'DD')::int))/ 30 / 12

6
select avg(st.score)::real, st.n_group
from student st
inner join (select count(sh.id_hobby), sh.student_id
		   from student_hobby sh, hobby hb
		   where hb.id=sh.id_hobby
		   group by sh.student_id
		   having count(sh.id_hobby)>=1)tt
		   on tt.student_id=st.id
group by st.n_group

7
select hb.name, hb.risk, extract(month from (justify_days(sh.date_finish - sh.date_start)))
from student_hobby sh
inner join (select sh.student_id )

SELECT hobby.name, hobby.risk, extract(month from (justify_days(student_Hobby.date_finish - student_Hobby.date_start)))
FROM student
INNER JOIN student_hobby ON student_hobby.student_id = student.id
INNER JOIN hobby ON hobby.id = student_Hobby.id_hobby
WHERE  student_hobby.id = (
	select sh.id
	from student_hobby sh
	where sh.date_finish is null
	order by sh.date_start
	limit 1)
group by hobby.name, hobby.risk, student_Hobby.date_finish, student_Hobby.date_start

8

SELECT hb.name, st.name,st.surname, st.score
FROM student st
INNER JOIN student_hobby sh on st.id=sh.student_id
INNER JOIN hobby hb on hb.id=sh.student_id
WHERE st.score>=(select max(st.score)
				from student st)

9
SELECT hb.name, st.name,st.surname, st.score, st.n_group
FROM student st
INNER JOIN student_hobby sh on st.id=sh.student_id
INNER JOIN hobby hb on hb.id=sh.student_id
WHERE  (st.n_group between 2000 and 3000)
GROUP BY hb.name, st.name,st.surname, st.score,st.n_group
HAVING (st.score between 2.6 and 3.4)

10
WITH t AS (
SELECT count(sh.student_id) as countofhob, sh.id_hobby, SUBSTRING(st.n_group::varchar,1,1) as course
FROM student_hobby sh
INNER JOIN student st ON sh.student_id = st.id
GROUP BY SUBSTRING(st.n_group::varchar,1,1),sh.id_hobby
)
SELECT t.course, hobby.name
FROM t
INNER JOIN (
	SELECT t.course, max(countofhob) as max_c
	FROM t
	GROUP BY t.course
) tt ON t.course = tt.course AND t.countofhob = tt.max_c
INNER JOIN hobby ON t.id_hobby = hobby.id

SELECT substring(st.n_group::varchar,1,1) as course
FROM student st
INNER JOIN (SELECT 
			FROM student_hobby sh
			)
			on st.id=sh.student_id
INNER JOIN hobby hb on sh.id_hobby=hb.id
Group by course

студентов занимаются и having> 1

select * from student_hobby
select * from hobby

11
SELECT DISTINCT st.n_group
FROM student st
INNER JOIN(SELECT st.n_group, count(st.id) as countofstd, sum(st.score)
FROM student st
WHERE st.score >= 4
GROUP BY st.n_group) tt
ON st.n_group = tt.n_group
INNER JOIN(SELECT st.n_group, count(st.id) as countofstd
FROM student st
GROUP BY st.n_group) ttt
ON st.n_group = ttt.n_group
WHERE 60*ttt.countofstd/100  <= ttt.countofstd

12

SELECT count(sh.student_id), SUBSTRING(st.n_group::varchar, 1,1)
FROM student_hobby sh, student st
WHERE sh.date_finish IS NULL AND sh.student_id = st.id
GROUP BY SUBSTRING(st.n_group::varchar,1,1)


13

SELECT DISTINCT st.n_group,st.surname,st.name,st.date_birth,substring(st.n_group::varchar,1,1) as course
FROM student st
INNER JOIN (SELECT student_id,id_hobby,sh.date_finish
					  FROM student_hobby sh
			group by id_hobby,student_id,sh.date_finish
					 )tt 
					 on st.id=tt.student_id
WHERE st.score=5 and tt.date_finish is not null	 

select * from student_hobby
select * from student

14

SELECT st.name,st.surname
FROM student st
INNER JOIN student_hobby sh on st.id=sh.student_id
WHERE (sh.date_finish is null) and (extract (year from(justify_days(now() - sh.date_start))))>5

CREATE OR REPLACE VIEW Students_V1 AS --создание представления
SELECT st.id,st.name,st.surname,st.n_group,st.score,st.adress,st.date_birth
FROM student st
INNER JOIN student_hobby sh on st.id=sh.student_id
WHERE (sh.date_finish is null) and (extract (year from(justify_days(now() - sh.date_start))))>5

drop view Students_V1 --удаление представления
select surname from Students_V1---выбор из предлставления

15

SELECT hb.name, tt.countofhob
FROM hobby hb
INNER JOIN
(SELECT count(sh.student_id) as countofhob, sh.hobby_id
FROM student_hobby sh
WHERE sh.data_end IS NULL
GROUP BY sh.hobby_id) tt
ON tt.hobby_id = hb.id

16
SELECT hb.name,countofhob
FROM hobby hb 
INNER JOIN 
(SELECT count(sh.student_id) as countofhob, sh.id_hobby
	FROM student_hobby sh 
	GROUP BY sh.id_hobby) tt 
ON tt.id_hobby = hb.id
ORDER BY tt.countofhob DESC 
LIMIT 1

select * from student_hobby
select * from hobby

17

SELECT DISTINCT st.name,st.surname,ttt.name
FROM student st, student_hobby sh
INNER JOIN
(
SELECT hb.name,hb.id
FROM hobby hb
INNER JOIN
(SELECT count(sh.student_id) as countofhob, sh.id_hobby
	FROM student_hobby sh
	GROUP BY sh.id_hobby) tt
	ON tt.id_hobby = hb.id
	ORDER BY tt.countofhob DESC
	LIMIT 1
) ttt
ON sh.id_hobby = ttt.id
WHERE sh.student_id = st.id

18
SELECT hb.id
FROM hobby hb
INNER JOIN(select hb.risk,hb.id
			  from hobby hb
		   group by hb.risk,hb.id
			  order by hb.risk desc)tt
			  on hb.id=tt.id
LIMIT 3

select * from hobby

19
SELECT st.name,st.surname,extract(day from (justify_days(now() - sh.date_start))) as countofdays
FROM student st
INNER JOIN student_hobby sh on sh.student_id=st.id
WHERE (sh.date_finish is null)
ORDER BY countofdays DESC LIMIT 10
		   
20
SELECT DISTINCT st.n_group,extract(day from (justify_days(now() - sh.date_start))) as countofdays
FROM student st
INNER JOIN student_hobby sh on sh.student_id=st.id
WHERE (sh.date_finish is null)
ORDER BY countofdays DESC LIMIT 10

21
CREATE OR REPLACE VIEW SortDESCScore AS
SELECT st.n_group, st.name,st.surname, st.score
FROM student st
ORDER BY st.score DESC
---
select name from SortDESCScore

22
CREATE OR REPLACE VIEW Num_22 as
WITH t AS (
SELECT count(sh.student_id) as countofhob, sh.id_hobby, SUBSTRING(st.n_group::varchar,1,1) as course
FROM student_hobby sh
INNER JOIN student st ON sh.student_id = st.id
GROUP BY SUBSTRING(st.n_group::varchar,1,1),sh.id_hobby
)
SELECT t.course, hobby.name
FROM t
INNER JOIN (
	SELECT t.course, max(countofhob) as max_c
	FROM t
	GROUP BY t.course
) tt ON t.course = tt.course AND t.countofhob = tt.max_c
INNER JOIN hobby ON t.id_hobby = hobby.id

select name from num_22

23

CREATE OR REPLACE VIEW Num_23 AS
SELECT hb.name,hb.id,countofhob, n_group
FROM hobby hb 
INNER JOIN 
(SELECT count(sh.student_id) as countofhob, sh.id_hobby, ttt.n_group
FROM student_hobby sh
INNER JOIN (SELECT st.id, st.n_group
			FROM student st
			WHERE st.n_group between 2000 and 3000
			GROUP BY st.id
		   )ttt on ttt.id=sh.id
GROUP BY sh.id_hobby,ttt.n_group) tt 
ON tt.id_hobby = hb.id
ORDER BY tt.countofhob DESC 
LIMIT 1

select * from Num_23

24

CREATE or REPLACE VIEW CountOF5Students as
SELECT count(st.id) as "Кол-во отличников",substring(st.n_group::varchar,1,1)  || ' Курс' as course
FROM student st
WHERE st.score=5
GROUP BY substring(st.n_group::varchar,1,1)

select * from countof5students

25
CREATE OR REPLACE VIEW Popular_Hobby as
SELECT hb.name, tt.countofhobby
FROM hobby hb
INNER JOIN (SELECT count(sh.student_id) as countofhobby,sh.id_hobby
		   FROM student_hobby sh
		   GROUP BY sh.id_hobby)tt
ON hb.id=tt.id_hobby
ORDER BY tt.countofhobby DESC
LIMIT 1

select name from Popular_hobby

26
CREATE OR REPLACE VIEW CheckStudent AS
SELECT st.name,st.surname,st.n_group,st.score,st.adress,st.date_birth FROM student st

CREATE OR REPLACE VIEW AddStudent AS
SELECT name,surname,n_group,score FROM CheckStudent
WITH CHECK OPTION

select * from addstudent

27

SELECT min(st.score),avg(st.score)::real,max(st.score), substring(st.name,1,1)
FROM student st
GROUP BY substring(st.name,1,1)

28

SELECT SUBSTRING(st.n_group::varchar,1,1), st.surname, max(st.score), min(st.score)
FROM student st
GROUP BY SUBSTRING(st.n_group::varchar,1,1), st.surname
ORDER BY SUBSTRING(st.n_group::varchar,1,1) DESC

select * from student

29


SELECT DISTINCT to_char(st.date_birth, 'YYYY'), count(sh.id_hobby)
FROM student st, student_hobby sh
WHERE st.id = sh.student_id
GROUP BY to_char(st.date_birth, 'YYYY')

30

SELECT distinct substring(st.name,1,1) as firstn, max(hb.risk),min(hb.risk)
FROM student st,student_hobby sh, hobby hb
WHERE st.id=sh.student_id and sh.id_hobby=hb.id
GROUP BY firstn

31

SELECT DISTINCT to_char(st.date_birth, 'MM'), avg(st.score)::real,st.name
FROM student st, student_hobby sh, hobby hb
WHERE st.id = sh.student_id and sh.id_hobby=hb.id and hb.name='Футбол'
GROUP BY to_char(st.date_birth, 'MM'), st.score,st.name

32

SELECT  (('Имя: ' || st.name || ' Фамилия: ' || st.surname || ' Группа: ' || st.n_group)), st.id
FROM student st, student_hobby sh, hobby hb
WHERE st.id=sh.student_id and sh.id_hobby=hb.id

33

SELECT CASE
WHEN count(st.surname) > 0 THEN count(st.surname)::varchar
ELSE 'Не найдено'
END AS countofstd
FROM student st
WHERE st.surname like '%ов%'

34

CREATE OR REPLACE VIEW Num_34 AS
SELECT SUBSTRING(st.surname || '##########', 1, 10) as surname
FROM student st

select surname from num_34

35


SELECT TRIM(both '#' from st.surname) 
FROM Num_34 st

36

SELECT '2018-05-01'::date - '2018-04-01'::date
